// <auto-generated />
using System;
using Hrms.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hrms.Common.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240105080330_synclog")]
    partial class synclog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hrms.Common.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetDetails")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ASSET_DETAILS");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("ASSET_TYPE_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_Id");

                    b.Property<DateOnly>("GivenDate")
                        .HasColumnType("date")
                        .HasColumnName("GIVEN_DATE");

                    b.Property<DateOnly?>("ReturnDate")
                        .HasColumnType("date")
                        .HasColumnName("RETURN_DATE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("EmpId");

                    b.ToTable("ASSET");
                });

            modelBuilder.Entity("Hrms.Common.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("ASSET_TYPE");
                });

            modelBuilder.Entity("Hrms.Common.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AttendanceId")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("ATTID");

                    b.Property<byte>("AttendanceStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("ATT_STATUS");

                    b.Property<byte>("AttendanceType")
                        .HasColumnType("smallint")
                        .HasColumnName("ATT_TYPE");

                    b.Property<char>("CheckInMode")
                        .HasColumnType("char(1)")
                        .HasColumnName("CHECKIN_MODE");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_Id");

                    b.Property<bool>("FlagIn")
                        .HasColumnType("boolean")
                        .HasColumnName("FLGIN");

                    b.Property<bool>("FlagOut")
                        .HasColumnType("boolean")
                        .HasColumnName("FLGOUT");

                    b.Property<string>("InMode")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("INMODE");

                    b.Property<string>("InRemarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("INREMARKS");

                    b.Property<string>("InTime")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("INTIME");

                    b.Property<byte?>("IsHalted")
                        .HasColumnType("smallint")
                        .HasColumnName("IS_HALTED");

                    b.Property<string>("LunchIn")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LUNCHIN");

                    b.Property<DateOnly?>("LunchInDate")
                        .HasColumnType("date")
                        .HasColumnName("DT_LIN");

                    b.Property<string>("LunchInMode")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LUNCHINMODE");

                    b.Property<string>("LunchInRemarks")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LUNCHINREMARKS");

                    b.Property<string>("LunchOut")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LUNCHOUT");

                    b.Property<DateOnly?>("LunchOutDate")
                        .HasColumnType("date")
                        .HasColumnName("DT_LOUT");

                    b.Property<string>("LunchOutMode")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LUNCHOUTMODE");

                    b.Property<string>("LunchOutRemarks")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LUNCHOUTREMARKS");

                    b.Property<string>("OutMode")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OUTMODE");

                    b.Property<string>("OutRemarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OUTREMARKS");

                    b.Property<string>("OutTime")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("OUTTIME");

                    b.Property<string>("OutVNO")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OUT_VNO");

                    b.Property<int?>("RegularisationId")
                        .HasColumnType("integer")
                        .HasColumnName("REGULARISATION_ID");

                    b.Property<long>("SignInTimeStamp")
                        .HasColumnType("bigint")
                        .HasColumnName("SIN_TIMEVAL");

                    b.Property<long>("SignOutTimeStamp")
                        .HasColumnType("bigint")
                        .HasColumnName("SOUT_TIMEVAL");

                    b.Property<string>("TiffinIn")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TIFFININ");

                    b.Property<string>("TiffinInMode")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TIFFININMODE");

                    b.Property<string>("TiffinInRemarks")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIFFININREMARKS");

                    b.Property<DateOnly?>("TiffinIndate")
                        .HasColumnType("date")
                        .HasColumnName("DT_TIN");

                    b.Property<string>("TiffinOut")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TIFFINOUT");

                    b.Property<string>("TiffinOutMode")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TIFFINOUTMODE");

                    b.Property<string>("TiffinOutRemarks")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIFFINOUTREMARKS");

                    b.Property<DateOnly?>("TiffinOutdate")
                        .HasColumnType("date")
                        .HasColumnName("DT_TOUT");

                    b.Property<DateOnly>("TransactionDate")
                        .HasColumnType("date")
                        .HasColumnName("TDATE");

                    b.Property<DateOnly?>("TransactionDateOut")
                        .HasColumnType("date")
                        .HasColumnName("TDATE_OUT");

                    b.Property<short?>("WorkHourId")
                        .HasColumnType("smallint")
                        .HasColumnName("WORKHOUR_ID");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("RegularisationId");

                    b.HasIndex("WorkHourId");

                    b.ToTable("ATTENDANCE");
                });

            modelBuilder.Entity("Hrms.Common.Models.AttendanceLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DEVICE_CODE");

                    b.Property<long>("DeviceLogId")
                        .HasColumnType("bigint")
                        .HasColumnName("DEVICE_LOG_ID");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("DIRECTION");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_SUCCESS");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REMARKS");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TIME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("ATTENDANCE_LOG");
                });

            modelBuilder.Entity("Hrms.Common.Models.AttendanceLogNoDirection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DEVICE_CODE");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("integer")
                        .HasColumnName("DEVICE_ID");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_SUCCESS");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REMARKS");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time without time zone")
                        .HasColumnName("TIME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("ATTENDANCE_LOG_NO_DIRECTION");
                });

            modelBuilder.Entity("Hrms.Common.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("BankId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("BankAddress");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("BankName");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("tblBank");
                });

            modelBuilder.Entity("Hrms.Common.Models.BloodGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("BLOOD_GROUP");
                });

            modelBuilder.Entity("Hrms.Common.Models.Branch", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("BRANCH_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("CITY_ID");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<byte?>("IsOutBranch")
                        .HasColumnType("smallint")
                        .HasColumnName("ISOUTBRANCH");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BRANCH_NAME");

                    b.Property<int?>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("STATE_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("BRANCH");
                });

            modelBuilder.Entity("Hrms.Common.Models.BusinessUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("BUSINESS_UNIT");
                });

            modelBuilder.Entity("Hrms.Common.Models.Calendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("CALENDAR");
                });

            modelBuilder.Entity("Hrms.Common.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CITY_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CITY_NAME");

                    b.Property<int>("StateId")
                        .HasColumnType("integer")
                        .HasColumnName("STATE_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("CITY");
                });

            modelBuilder.Entity("Hrms.Common.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CLASS_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CLASS_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("CLASS");
                });

            modelBuilder.Entity("Hrms.Common.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Company_Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_Add1");

                    b.Property<string>("Address2")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_Add2");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("EndDate");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("IsDefault");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Company_Name");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("StartDate");

                    b.Property<string>("Telephone")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Company_Tel");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("COMPANY");
                });

            modelBuilder.Entity("Hrms.Common.Models.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("COST_CENTER");
                });

            modelBuilder.Entity("Hrms.Common.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("COUNTRY");
                });

            modelBuilder.Entity("Hrms.Common.Models.DefaultWorkHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<short>("DayId")
                        .HasColumnType("smallint")
                        .HasColumnName("DAY_ID");

                    b.Property<int?>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.Property<short>("WorkHourId")
                        .HasColumnType("smallint")
                        .HasColumnName("WorkHour_Id");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("WorkHourId");

                    b.ToTable("DEFAULT_WORKHOUR");
                });

            modelBuilder.Entity("Hrms.Common.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("DEPT_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("CompanyId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("FLDType")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("FLDTYPE");

                    b.Property<int?>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("[LEVEL]");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DEPT_NAME");

                    b.Property<string>("Parent")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DEPT_PARENT");

                    b.Property<int>("TotalStaffs")
                        .HasColumnType("integer")
                        .HasColumnName("NOSTAFF");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("DEPARTMENT");
                });

            modelBuilder.Entity("Hrms.Common.Models.Designation", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("DEG_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("DEPARTMENT_ID");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("JOBDESC");

                    b.Property<short?>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("[Level]");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DEG_NAME");

                    b.Property<string>("Parent")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DEG_PARENT");

                    b.Property<int>("Rank")
                        .HasColumnType("integer")
                        .HasColumnName("Deg_Rank");

                    b.Property<int>("TotalStaffs")
                        .HasColumnType("integer")
                        .HasColumnName("NOSTAFF");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DESIGNATION");
                });

            modelBuilder.Entity("Hrms.Common.Models.DeviceLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DATE");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("integer")
                        .HasColumnName("DEVICE_ID");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text")
                        .HasColumnName("ERROR_MESSAGE");

                    b.Property<string>("ErrorTrace")
                        .HasColumnType("text")
                        .HasColumnName("ERROR_TRACE");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_SUCCESS");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REMARKS");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("DEVICE_LOG");
                });

            modelBuilder.Entity("Hrms.Common.Models.DeviceSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendanceMode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AttendanceMode");

                    b.Property<bool>("ClearDeviceLog")
                        .HasColumnType("boolean")
                        .HasColumnName("CLEAR_DEVICE_LOG");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("DeviceIp")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEVICE_IP");

                    b.Property<string>("DeviceModel")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEVICE_MODEL");

                    b.Property<DateOnly?>("LastFetchedDate")
                        .HasColumnType("date")
                        .HasColumnName("LAST_FETCHED_DATE");

                    b.Property<TimeOnly?>("LastFetchedTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("LAST_FETCHED_TIME");

                    b.Property<int>("PortNumber")
                        .HasColumnType("integer")
                        .HasColumnName("PORT_NUMBER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("DEVICE_SETTINGS");
                });

            modelBuilder.Entity("Hrms.Common.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("DIVISION");
                });

            modelBuilder.Entity("Hrms.Common.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FILE_PATH");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FILENAME");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPLOADED_AT");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DOCUMENTS");
                });

            modelBuilder.Entity("Hrms.Common.Models.EarnedLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<short>("LeaveId")
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVE_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("LeaveId");

                    b.ToTable("EARNED_LEAVE");
                });

            modelBuilder.Entity("Hrms.Common.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CertificateName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TName");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("CountryId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Duration")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Duration");

                    b.Property<short?>("EducationLevelId")
                        .HasColumnType("smallint")
                        .HasColumnName("ELevel");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_Id");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("TDateEnd");

                    b.Property<string>("FinalGrade")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EDivision");

                    b.Property<byte>("Flag")
                        .HasColumnType("smallint")
                        .HasColumnName("flg");

                    b.Property<string>("Institute")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Institute");

                    b.Property<string>("InstituteAddress")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("InstituteAdd");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("TDate");

                    b.Property<string>("Subject")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MSubject");

                    b.Property<string>("University")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("University");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("EducationLevelId");

                    b.HasIndex("EmpId");

                    b.ToTable("EMP_EDUTRN");
                });

            modelBuilder.Entity("Hrms.Common.Models.EducationLevel", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LEVELNAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("EDUCATION_LEVEL");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("integer")
                        .HasColumnName("CALENDAR_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("CalendarId");

                    b.HasIndex("EmpId");

                    b.ToTable("EMP_CALENDAR");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte?>("ATTBWISE")
                        .HasColumnType("smallint")
                        .HasColumnName("ATTBWISE");

                    b.Property<string>("AadharNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_ADHAR_NUMBER");

                    b.Property<byte>("Appointed")
                        .HasColumnType("smallint")
                        .HasColumnName("EMP_APPOINTED");

                    b.Property<DateOnly?>("AppointedDate")
                        .HasColumnType("date")
                        .HasColumnName("EMP_APPDATE");

                    b.Property<int?>("BirthCountryId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_BIRTH_COUNTRY_ID");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_BIRTH_PLACE");

                    b.Property<int?>("BirthStateId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_BIRTH_STATE_ID");

                    b.Property<DateOnly?>("BirthdayCelebrationDate")
                        .HasColumnType("date")
                        .HasColumnName("EMP_BDay_CelebDt");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EMP_BLOOD_GROUP");

                    b.Property<string>("CardId")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EMP_CARDID");

                    b.Property<string>("CitizenshipNumber")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMP_CITIZENSHIPNO");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("varchar(14)")
                        .HasColumnName("EMP_PHONE");

                    b.Property<string>("CorrespondanceAddress")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_CADD");

                    b.Property<string>("CorrespondanceAddress2")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_CADD2");

                    b.Property<string>("CorrespondanceCity")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_CCITY");

                    b.Property<string>("CorrespondanceDistrict")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EMP_CDISTRICT");

                    b.Property<string>("CorrespondancePincode")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_CPINCODE");

                    b.Property<string>("CorrespondanceState")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_CSTATE");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("EMP_DOB");

                    b.Property<string>("DrivingLicenseNumber")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EMP_DRVLISCENCENO");

                    b.Property<string>("Education")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMP_EDUCATION");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EMP_EMAIL");

                    b.Property<string>("EmergencyContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EMP_CONTACTNO");

                    b.Property<string>("EmergencyContactPerson")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EMP_CONTACT_PERSON");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EMP_FATHER_NAME");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("EMP_FIRSTNAME");

                    b.Property<char?>("Gender")
                        .HasColumnType("char(1)")
                        .HasColumnName("EMP_GENDER");

                    b.Property<string>("GrandFatherName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EMP_GRAND_FATHER_NAME");

                    b.Property<DateOnly?>("JoinDate")
                        .HasColumnType("date")
                        .HasColumnName("EMP_JOINDATE");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("EMP_LASTNAME");

                    b.Property<char?>("MaritalStatus")
                        .HasColumnType("char(1)")
                        .HasColumnName("EMP_MARITALSTATUS");

                    b.Property<DateOnly?>("MarriageDate")
                        .HasColumnType("date")
                        .HasColumnName("EMP_MARRIAGE_DATE");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("EMP_MIDDLENAME");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("EMP_MOBILE");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EMP_MOTHER_NAME");

                    b.Property<string>("Nationality")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_NATIONALITY");

                    b.Property<string>("PanNumber")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EMP_PANNO");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_PASSPORT_NUMBER");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EMP_PASSWORD");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_PADD");

                    b.Property<string>("PermanentAddress2")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_PADD2");

                    b.Property<string>("PermanentCity")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_PCITY");

                    b.Property<string>("PermanentCountry")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("EMP_PCOUNTRY");

                    b.Property<string>("PermanentDistrict")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_PDISTRICT");

                    b.Property<string>("PermanentPincode")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_PPINCODE");

                    b.Property<string>("PermanentState")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_PSTATE");

                    b.Property<string>("PermanentStreet")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMP_PSTREET");

                    b.Property<string>("PermanentZone")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("EMP_PZONE");

                    b.Property<string>("Photo")
                        .HasColumnType("text")
                        .HasColumnName("PHOTO");

                    b.Property<DateOnly?>("RelevingDate")
                        .HasColumnType("date")
                        .HasColumnName("EMP_RELEVING_DATE");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_RELIGION_ID");

                    b.Property<string>("SignInMode")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EMP_SIGNINMODE");

                    b.Property<string>("TemporaryAddress")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_TADD");

                    b.Property<string>("TemporaryCountry")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("EMP_TCOUNTRY");

                    b.Property<string>("TemporaryDistrict")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_TDISTRICT");

                    b.Property<string>("TemporaryStreet")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMP_TSTREET");

                    b.Property<string>("TemporaryZone")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("EMP_TZONE");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EMP_TITLE");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("T_Date");

                    b.Property<string>("TransactionUser")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("TUser");

                    b.Property<DateOnly?>("UpToDate")
                        .HasColumnType("date")
                        .HasColumnName("UpTo_Date");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("BirthCountryId");

                    b.HasIndex("BirthStateId");

                    b.HasIndex("ReligionId");

                    b.ToTable("EMP_DETAIL");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpDeviceCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEVICE_CODE");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("integer")
                        .HasColumnName("DEVICE_ID");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<DateTime?>("LastFetchedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LAST_FETCHED_AT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("EmpId");

                    b.ToTable("EMP_DEVICE_CODE");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("DOC_NO");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPLOAD_DT");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<string>("FileDescription")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("FILE_DESC");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FILE_EXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("FILE_NAME");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("REMARKS");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("EMP_DOCLIST");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ByDate")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BYDATE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<short>("Days")
                        .HasColumnType("smallint")
                        .HasColumnName("DAYS");

                    b.Property<string>("LeaveBy")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("LEAVEBY");

                    b.Property<short>("LeaveId")
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVEID");

                    b.Property<short?>("MaxDays")
                        .HasColumnType("smallint")
                        .HasColumnName("MAXDAYS");

                    b.Property<int>("PId")
                        .HasColumnType("integer")
                        .HasColumnName("PID");

                    b.Property<string>("Paid")
                        .HasColumnType("varchar(7)")
                        .HasColumnName("PAID");

                    b.Property<string>("TransactionUser")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TRNUSER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.Property<short?>("UptoMonth")
                        .HasColumnType("smallint")
                        .HasColumnName("UPTOMONTH");

                    b.Property<short?>("UptoYear")
                        .HasColumnType("smallint")
                        .HasColumnName("UPTOYEAR");

                    b.HasKey("Id");

                    b.HasIndex("LeaveId");

                    b.ToTable("EMP_LEAVE");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("PID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("TDATE");

                    b.HasKey("Id");

                    b.ToTable("EMP_LOG");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmploymentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EH_ADD");

                    b.Property<string>("City")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CITY");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Designation")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DESIGNATION");

                    b.Property<string>("Duration")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EH_DURATION");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_Id");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("FROM_DATE");

                    b.Property<string>("JobDescription")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EH_JOBDESC");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LOCATION");

                    b.Property<string>("Organization")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EH_ORG");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("TO_DATE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("EMP_EMPLOYMENTHISTORY");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("PID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("AccountNo");

                    b.Property<decimal?>("BasicSalary")
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("BSALARY");

                    b.Property<float?>("BasicTax")
                        .HasColumnType("real")
                        .HasColumnName("BTAX");

                    b.Property<short?>("BranchId")
                        .HasColumnType("smallint")
                        .HasColumnName("BRANCH_ID");

                    b.Property<int?>("BusinessUnitId")
                        .HasColumnType("integer")
                        .HasColumnName("BUSINESS_UNIT_ID");

                    b.Property<byte?>("CalculateLate")
                        .HasColumnType("smallint")
                        .HasColumnName("CalcLate");

                    b.Property<byte>("CheckInMode")
                        .HasColumnType("smallint")
                        .HasColumnName("EMP_CHECKIN_MODE");

                    b.Property<int?>("Class")
                        .HasColumnType("integer")
                        .HasColumnName("CLASS");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("COMPANY_ID");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("integer")
                        .HasColumnName("COST_CENTER_ID");

                    b.Property<byte>("DailyWage")
                        .HasColumnType("smallint")
                        .HasColumnName("DailyWage");

                    b.Property<string>("DateType")
                        .HasColumnType("varchar(5)")
                        .HasColumnName("BYDATE");

                    b.Property<decimal>("DefCalcDutyHour")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("DEF_CALC_DUTYHOUR");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("DEPT_ID");

                    b.Property<short?>("DesignationId")
                        .HasColumnType("smallint")
                        .HasColumnName("DEG_ID");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("integer")
                        .HasColumnName("DIVISION_ID");

                    b.Property<byte?>("EmployeeAttGroup")
                        .HasColumnType("smallint")
                        .HasColumnName("EMP_ATTGROUP");

                    b.Property<byte?>("EmployeeCategory")
                        .HasColumnType("smallint")
                        .HasColumnName("EMP_CATEGORY");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<bool?>("EpsApplicable")
                        .HasColumnType("boolean")
                        .HasColumnName("EPS_APPLICABLE");

                    b.Property<string>("EsiNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ESI_NUMBER");

                    b.Property<string>("ExtensionNumber")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EXT");

                    b.Property<bool?>("ExtraUniform")
                        .HasColumnType("boolean")
                        .HasColumnName("EXTRA_UNIFORM");

                    b.Property<string>("GeneratedBy")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GENERATEDBY");

                    b.Property<decimal>("GradeAmount")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("GRADEAMNT");

                    b.Property<decimal>("GradeAmountDaily")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("GDEAMNT");

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer")
                        .HasColumnName("GRADE");

                    b.Property<int?>("HodEmpId")
                        .HasColumnType("integer")
                        .HasColumnName("HOD_EMP_ID");

                    b.Property<string>("IfscCode")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IFSC_CODE");

                    b.Property<bool?>("IsCeiling")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_CEILING");

                    b.Property<DateOnly?>("LastTransactionDate")
                        .HasColumnType("date")
                        .HasColumnName("JDATE");

                    b.Property<string>("LastTransactionDateBS")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("JBSDATE");

                    b.Property<short?>("ModeId")
                        .HasColumnType("smallint")
                        .HasColumnName("MODE_ID");

                    b.Property<bool>("NegativeLeave")
                        .HasColumnType("boolean")
                        .HasColumnName("NEGATIVELEAVE");

                    b.Property<string>("OfficialContactNumber")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("OFFICIAL_CONTACT_NUMBER");

                    b.Property<string>("OfficialEmail")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("OFFICIAL_EMAIL");

                    b.Property<int?>("PFBankId")
                        .HasColumnType("integer")
                        .HasColumnName("PF_BANKID");

                    b.Property<string>("PayRollMode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PAYROLLMODE");

                    b.Property<string>("PersonType")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PERSON_TYPE");

                    b.Property<string>("PersonalArea")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PERSONAL_AREA");

                    b.Property<string>("PfAccountNumber")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PF_ACCOUNTNO");

                    b.Property<bool?>("PfApplicable")
                        .HasColumnType("boolean")
                        .HasColumnName("PF_APPLICABLE");

                    b.Property<int?>("PlantId")
                        .HasColumnType("integer")
                        .HasColumnName("PLANT_ID");

                    b.Property<string>("PositionCode")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("POSITION_CODE");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer")
                        .HasColumnName("REGION_ID");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("REMARKS");

                    b.Property<int?>("RmEmpId")
                        .HasColumnType("integer")
                        .HasColumnName("RM_EMP_ID");

                    b.Property<int?>("SalaryBankId")
                        .HasColumnType("integer")
                        .HasColumnName("SAL_BANKID");

                    b.Property<short?>("StatusId")
                        .HasColumnType("smallint")
                        .HasColumnName("STATUS_ID");

                    b.Property<string>("SubArea")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SUB_AREA");

                    b.Property<int?>("SubDepartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("SUB_DEPARTMENT_ID");

                    b.Property<string>("SubType")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EMP_SUB_TYPE");

                    b.Property<decimal?>("TDS")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("TDS");

                    b.Property<byte>("TDSType")
                        .HasColumnType("smallint")
                        .HasColumnName("TDSTYPE");

                    b.Property<byte>("Terminate")
                        .HasColumnType("smallint")
                        .HasColumnName("Emp_Terminate");

                    b.Property<int>("TerminateMonth")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_Terminate_Month");

                    b.Property<int>("TerminateYear")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_Terminate_Year");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("T_Date");

                    b.Property<string>("TransactionMode")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("EMP_TRANMODE");

                    b.Property<string>("TransactionUser")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TUser");

                    b.Property<string>("UanNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UAN_NUMBER");

                    b.Property<bool?>("UniformStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("UNIFORM_STATUS");

                    b.Property<int?>("UniformTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("UNIFORM_TYPE_ID");

                    b.Property<decimal?>("VpfAmount")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("VPF_AMOUNT");

                    b.Property<bool?>("VpfApplicable")
                        .HasColumnType("boolean")
                        .HasColumnName("VPF_APPLICABLE");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GradeId");

                    b.HasIndex("HodEmpId");

                    b.HasIndex("ModeId");

                    b.HasIndex("PFBankId");

                    b.HasIndex("PlantId");

                    b.HasIndex("RegionId");

                    b.HasIndex("RmEmpId");

                    b.HasIndex("SalaryBankId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SubDepartmentId");

                    b.HasIndex("UniformTypeId");

                    b.ToTable("EMP_TRAN");
                });

            modelBuilder.Entity("Hrms.Common.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<int?>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("GENDER");

                    b.Property<bool>("IsWorking")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_WORKING");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PLACE_OF_BIRTH");

                    b.Property<string>("RelationshipType")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RELATIONSHIP_TYPE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("EMP_FAMILY");
                });

            modelBuilder.Entity("Hrms.Common.Models.ForcedAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("FAttId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("TDate");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_Id");

                    b.Property<byte>("Flag")
                        .HasColumnType("smallint")
                        .HasColumnName("Flag");

                    b.Property<byte>("Mode")
                        .HasColumnType("smallint")
                        .HasColumnName("Mode");

                    b.Property<string>("ModeNM")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ModeNM");

                    b.Property<int?>("RegularisationId")
                        .HasColumnType("integer")
                        .HasColumnName("RegularisationId");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Remarks");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TTime");

                    b.Property<int>("TimeVal")
                        .HasColumnType("integer")
                        .HasColumnName("TimeVal");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("TrnDate");

                    b.Property<string>("TransactionUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TrnUser");

                    b.HasKey("Id");

                    b.HasIndex("RegularisationId");

                    b.ToTable("tblFATTLOG");
                });

            modelBuilder.Entity("Hrms.Common.Models.GatePassType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("GATE_PASS_TYPES");
                });

            modelBuilder.Entity("Hrms.Common.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("GRADE_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("GType")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GRADE_TYPE");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("GRADE_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("GType");

                    b.ToTable("GRADE");
                });

            modelBuilder.Entity("Hrms.Common.Models.GradeType", b =>
                {
                    b.Property<string>("GType")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GType");

                    b.HasKey("GType");

                    b.ToTable("GRADE_TYPE");
                });

            modelBuilder.Entity("Hrms.Common.Models.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int?>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TYPE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("EMP_HOBBY");
                });

            modelBuilder.Entity("Hrms.Common.Models.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("HOLIDAY_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("HOLIDAY_DATE");

                    b.Property<string>("Day")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DAY");

                    b.Property<string>("DayType")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DAY_TYPE");

                    b.Property<int?>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("HOLIDAY_NAME");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric(15,2)")
                        .HasColumnName("HOLIDAY_QTY");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TYPE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("HOLIDAY");
                });

            modelBuilder.Entity("Hrms.Common.Models.HolidayCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CalendarId")
                        .HasColumnType("integer")
                        .HasColumnName("CALENDAR_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int>("HolidayId")
                        .HasColumnType("integer")
                        .HasColumnName("HOLIDAY_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("CalendarId");

                    b.HasIndex("HolidayId");

                    b.ToTable("HOLIDAY_CALENDAR");
                });

            modelBuilder.Entity("Hrms.Common.Models.ImportAttendanceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("AttendanceDate")
                        .HasColumnType("date")
                        .HasColumnName("ATTENDANCE_DATE");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text")
                        .HasColumnName("ERROR_MESSAGE");

                    b.Property<string>("ErrorTrace")
                        .HasColumnType("text")
                        .HasColumnName("ERROR_TRACE");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FILE_PATH");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FILENAME");

                    b.Property<bool>("IsSynced")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_SYNCED");

                    b.Property<bool>("IsUploaded")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_UPlOADED");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("SyncedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("SYNCED_AT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPLOADED_AT");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IMPORT_ATTENDANCE_LOGS");
                });

            modelBuilder.Entity("Hrms.Common.Models.LanguageKnown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanRead")
                        .HasColumnType("boolean")
                        .HasColumnName("CAN_READ");

                    b.Property<bool>("CanSpeak")
                        .HasColumnType("boolean")
                        .HasColumnName("CAN_SPEAK");

                    b.Property<bool>("CanWrite")
                        .HasColumnType("boolean")
                        .HasColumnName("CAN_WRITE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int?>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LANGUAGE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("EMP_LANGUAGE_KNOWN");
                });

            modelBuilder.Entity("Hrms.Common.Models.Leave", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVE_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Abbr");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int?>("Days")
                        .HasColumnType("integer")
                        .HasColumnName("LEAVE_DAYS");

                    b.Property<bool>("IsHalfLeave")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_HALF_LEAVE");

                    b.Property<byte>("IsPaidLeave")
                        .HasColumnType("smallint")
                        .HasColumnName("ISPAIDLEAVE");

                    b.Property<double?>("LeaveEarnDays")
                        .HasColumnType("double precision")
                        .HasColumnName("LEAVEEARN_DAYS");

                    b.Property<decimal?>("LeaveEarnQuantity")
                        .HasColumnType("numeric")
                        .HasColumnName("LEAVEEARN_QUANTITY");

                    b.Property<byte>("LeaveEarnType")
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVEEARN");

                    b.Property<short?>("LeaveMax")
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVE_MAX");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LEAVE_NAME");

                    b.Property<decimal?>("PayQuantity")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("LEAVE_PAY_QTY");

                    b.Property<byte?>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVE_TYPE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.Property<byte>("UseLimit")
                        .HasColumnType("smallint")
                        .HasColumnName("UseLimit");

                    b.HasKey("Id");

                    b.ToTable("LEAVE");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveApplicationHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("integer")
                        .HasColumnName("ApprovedBy_Id");

                    b.Property<string>("CancellationRemarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Cancellation_Remarks");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONTACT_NUMBER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int?>("DisapprovedById")
                        .HasColumnType("integer")
                        .HasColumnName("DisapprovedBy_Id");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("END_DATE");

                    b.Property<byte>("HLeaveType")
                        .HasColumnType("smallint")
                        .HasColumnName("HALF_LEAVE_TYPE");

                    b.Property<short>("LeaveId")
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVE_ID");

                    b.Property<int>("LeaveYearId")
                        .HasColumnType("integer")
                        .HasColumnName("LEAVE_YEAR_ID");

                    b.Property<string>("Reason")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REASON");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("START_DATE");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Status");

                    b.Property<decimal?>("TotalDays")
                        .HasColumnType("numeric")
                        .HasColumnName("TOTAL_DAYS");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("DisapprovedById");

                    b.HasIndex("EmpId");

                    b.HasIndex("LeaveId");

                    b.HasIndex("LeaveYearId");

                    b.ToTable("LEAVE_APPLICATION_HISTORY");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<byte>("Adjusted")
                        .HasColumnType("smallint")
                        .HasColumnName("ADJUSTED");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("integer")
                        .HasColumnName("ApprovedBy");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONTACT_NUMBER");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<decimal?>("Given")
                        .HasColumnType("numeric(9,4)")
                        .HasColumnName("GIVEN");

                    b.Property<short?>("GivenMonth")
                        .HasColumnType("smallint")
                        .HasColumnName("GIVENMONTH");

                    b.Property<int?>("GivenYear")
                        .HasColumnType("integer")
                        .HasColumnName("GivenYear");

                    b.Property<byte>("HLeaveType")
                        .HasColumnType("smallint")
                        .HasColumnName("HLEAVETYPE");

                    b.Property<byte>("IsRegular")
                        .HasColumnType("smallint")
                        .HasColumnName("IsRegular");

                    b.Property<bool>("IsYearly")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_YEARLY");

                    b.Property<short?>("LeaveId")
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVE_ID");

                    b.Property<int>("LeaveYearId")
                        .HasColumnType("integer")
                        .HasColumnName("LEAVE_YEAR_ID");

                    b.Property<DateOnly?>("Leave_Date")
                        .HasColumnType("date")
                        .HasColumnName("Leave_Date");

                    b.Property<decimal>("NoHrs")
                        .HasColumnType("numeric(9,4)")
                        .HasColumnName("NOHRS");

                    b.Property<DateOnly?>("REFATTDT")
                        .HasColumnType("date")
                        .HasColumnName("REFATTDT");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("REMARKS");

                    b.Property<decimal?>("Taken")
                        .HasColumnType("numeric(9,4)")
                        .HasColumnName("TAKEN");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("TDATE");

                    b.Property<string>("TransactionUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TUSER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("LeaveId");

                    b.HasIndex("LeaveYearId");

                    b.ToTable("LEAVE_LEDGER");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveLedgerTemp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("Adjusted")
                        .HasColumnType("smallint")
                        .HasColumnName("ADJUSTED");

                    b.Property<int?>("ApprovedByEmpId")
                        .HasColumnType("integer")
                        .HasColumnName("ApprovedBy");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<decimal?>("Given")
                        .HasColumnType("numeric(9,4)")
                        .HasColumnName("GIVEN");

                    b.Property<short?>("GivenMonth")
                        .HasColumnType("smallint")
                        .HasColumnName("GIVENMONTH");

                    b.Property<int?>("GivenYear")
                        .HasColumnType("integer")
                        .HasColumnName("GivenYear");

                    b.Property<byte>("HLeaveType")
                        .HasColumnType("smallint")
                        .HasColumnName("HLEAVETYPE");

                    b.Property<byte>("IsRegular")
                        .HasColumnType("smallint")
                        .HasColumnName("IsRegular");

                    b.Property<short?>("LeaveId")
                        .HasColumnType("smallint")
                        .HasColumnName("LEAVE_ID");

                    b.Property<int>("LeaveYearId")
                        .HasColumnType("integer")
                        .HasColumnName("LEAVE_YEAR_ID");

                    b.Property<DateOnly?>("Leave_Date")
                        .HasColumnType("date")
                        .HasColumnName("Leave_Date");

                    b.Property<decimal>("NoHrs")
                        .HasColumnType("numeric(9,4)")
                        .HasColumnName("NOHRS");

                    b.Property<DateOnly?>("REFATTDT")
                        .HasColumnType("date")
                        .HasColumnName("REFATTDT");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("REMARKS");

                    b.Property<decimal?>("Taken")
                        .HasColumnType("numeric(9,4)")
                        .HasColumnName("TAKEN");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("TDATE");

                    b.Property<string>("TransactionUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TUSER");

                    b.HasKey("Id");

                    b.HasIndex("LeaveId");

                    b.HasIndex("LeaveYearId");

                    b.ToTable("LEAVE_LEDGER_TEMP");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ByDate")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BY_DATE");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("END_DATE");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("START_DATE");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("YEAR");

                    b.HasKey("Id");

                    b.ToTable("LEAVE_YEAR");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveYearMonths", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LeaveYearId")
                        .HasColumnType("integer")
                        .HasColumnName("LEAVE_YEAR_ID");

                    b.Property<int>("Month")
                        .HasColumnType("integer")
                        .HasColumnName("MONTH");

                    b.Property<int>("MonthSequence")
                        .HasColumnType("integer")
                        .HasColumnName("MONTH_SEQUENCE");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("YEAR");

                    b.HasKey("Id");

                    b.HasIndex("LeaveYearId");

                    b.ToTable("LEAVE_YEAR_MONTHS");
                });

            modelBuilder.Entity("Hrms.Common.Models.Mode", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("MODE_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasColumnName("MODE_ABB");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("MODE_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("MODE");
                });

            modelBuilder.Entity("Hrms.Common.Models.OfficeOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("AttendanceId")
                        .HasColumnType("bigint")
                        .HasColumnName("ATTID");

                    b.Property<int?>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_Id");

                    b.Property<DateOnly?>("InDate")
                        .HasColumnType("date")
                        .HasColumnName("InDate");

                    b.Property<string>("InRemarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("InRemarks");

                    b.Property<string>("InTime")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("InTime");

                    b.Property<DateOnly?>("OutDate")
                        .HasColumnType("date")
                        .HasColumnName("OutDate");

                    b.Property<string>("OutRemarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OutRemarks");

                    b.Property<string>("OutTime")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("OutTime");

                    b.HasKey("Id");

                    b.ToTable("EMP_DAILYOUT");
                });

            modelBuilder.Entity("Hrms.Common.Models.PdfServiceDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FILE_PATH");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FILENAME");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPLOADED_AT");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PDFSERVICEDOCUMENTS");
                });

            modelBuilder.Entity("Hrms.Common.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CATEGORY");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DISPLAY_NAME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("SubCategory")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SUB_CATEGORY");

                    b.HasKey("Id");

                    b.ToTable("PERMISSIONS");
                });

            modelBuilder.Entity("Hrms.Common.Models.PermissionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("PERMISSION_CATEGORIES");
                });

            modelBuilder.Entity("Hrms.Common.Models.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("PLANT");
                });

            modelBuilder.Entity("Hrms.Common.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("REGION");
                });

            modelBuilder.Entity("Hrms.Common.Models.Regularisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApprovedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("APPROVED_BY_USER_ID");

                    b.Property<string>("CancellationRemarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CANCELLATION_REMARKS");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CONTACT_NUMBER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int?>("DisapprovedByUserId")
                        .HasColumnType("integer")
                        .HasColumnName("DISAPPROVED_BY_USER_ID");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("FROM_DATE");

                    b.Property<TimeOnly?>("FromTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("FROM_TIME");

                    b.Property<int?>("GatePassTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("GATE_PASS_TYPE_ID");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PLACE");

                    b.Property<string>("Reason")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REASON");

                    b.Property<string>("RegularisationType")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REGULARISATION_TYPE");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REMARKS");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("STATUS");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("TO_DATE");

                    b.Property<TimeOnly?>("ToTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("TO_TIME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByUserId");

                    b.HasIndex("DisapprovedByUserId");

                    b.HasIndex("EmpId");

                    b.HasIndex("GatePassTypeId");

                    b.ToTable("REGULARISATION");
                });

            modelBuilder.Entity("Hrms.Common.Models.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("RELIGION");
                });

            modelBuilder.Entity("Hrms.Common.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Hrms.Common.Models.Roster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("EMP_ID");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("USER_ID");

                    b.Property<short>("WorkHourId")
                        .HasColumnType("smallint")
                        .HasColumnName("WORK_HOUR_ID");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkHourId");

                    b.ToTable("ROSTER");
                });

            modelBuilder.Entity("Hrms.Common.Models.SalaryHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContrinutionType")
                        .HasColumnType("integer")
                        .HasColumnName("CONTRIBUTION_TYPE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("CREATED_BY");

                    b.Property<decimal>("DedTaxFreeAmount")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("DED_TAX_FREE_AMOUNT");

                    b.Property<bool>("DedTaxFreeLimitCheck")
                        .HasColumnType("boolean")
                        .HasColumnName("DED_TAX_FREE_LIMIT_CHECK");

                    b.Property<char?>("DrCr")
                        .HasColumnType("char(2)")
                        .HasColumnName("DRCR");

                    b.Property<int>("EstimatePostMonths")
                        .HasColumnType("integer")
                        .HasColumnName("ESTIMATE_POST_MONTHS");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_LOCKED");

                    b.Property<bool>("IsTaxable")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_TAXABLE");

                    b.Property<int>("MaxNos")
                        .HasColumnType("integer")
                        .HasColumnName("MAX_NOS");

                    b.Property<decimal>("MinHours")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("MIN_HOURS");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("SH_NAME");

                    b.Property<decimal>("OfficeContribution")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("OFFICE_CONTRIBUTION");

                    b.Property<decimal>("PerUnitRate")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("PER_UNIT_RATE");

                    b.Property<int>("RefId")
                        .HasColumnType("integer")
                        .HasColumnName("REF_ID");

                    b.Property<int>("ShCalcCategory")
                        .HasColumnType("integer")
                        .HasColumnName("SH_CALC_CATEGORY");

                    b.Property<string>("ShCalcMode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SH_CALC_MODE");

                    b.Property<string>("ShCalcType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SH_CALC_TYPE");

                    b.Property<int>("ShCategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("SH_CATEGORY_ID");

                    b.Property<string>("ShDataType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SH_CALC_DATATYPE");

                    b.Property<string>("TrnCode")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TRN_CODE");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UNIT_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("ShCategoryId");

                    b.ToTable("SALARY_HEADS");
                });

            modelBuilder.Entity("Hrms.Common.Models.SalaryHeadCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("CATEGORY");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NAME");

                    b.Property<bool>("ShowCategory")
                        .HasColumnType("boolean")
                        .HasColumnName("SHOW_CATEGORY");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("SALARY_HEAD_CATEGORY");
                });

            modelBuilder.Entity("Hrms.Common.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GrantLeaveType")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("GRANT_LEAVE_TYPE");

                    b.Property<int>("LeaveYearId")
                        .HasColumnType("integer")
                        .HasColumnName("LEAVE_YEAR_ID");

                    b.HasKey("Id");

                    b.HasIndex("LeaveYearId");

                    b.ToTable("SETTING");
                });

            modelBuilder.Entity("Hrms.Common.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("STATE");
                });

            modelBuilder.Entity("Hrms.Common.Models.Status", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("STATUS_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("STATUS_NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("STATUS");
                });

            modelBuilder.Entity("Hrms.Common.Models.SyncAttendanceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text")
                        .HasColumnName("ERROR_MESSAGE");

                    b.Property<string>("ErrorTrace")
                        .HasColumnType("text")
                        .HasColumnName("ERROR_TRACE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("SyncedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("SYNCED_AT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TYPE");

                    b.HasKey("Id");

                    b.ToTable("SYNC_ATTENDANCE_LOGS");
                });

            modelBuilder.Entity("Hrms.Common.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TITLES");
                });

            modelBuilder.Entity("Hrms.Common.Models.UniformType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("UNIFORM_TYPE");
                });

            modelBuilder.Entity("Hrms.Common.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<bool>("BatchUpdate")
                        .HasColumnType("boolean");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int?>("EmpId")
                        .HasColumnType("integer");

                    b.Property<bool>("ExtDayChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("InOutTmChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("MonthlyBulkAttendance")
                        .HasColumnType("boolean");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("RefreshAttendance")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("SelfAttendance")
                        .HasColumnType("boolean");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("UserAlert")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Hrms.Common.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Hrms.Common.Models.WeekendDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short?>("BranchId")
                        .HasColumnType("smallint")
                        .HasColumnName("Branch_Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CREATED_AT");

                    b.Property<int?>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnName("Emp_ID");

                    b.Property<bool>("Friday")
                        .HasColumnType("boolean")
                        .HasColumnName("Fri");

                    b.Property<bool>("Monday")
                        .HasColumnType("boolean")
                        .HasColumnName("Mon");

                    b.Property<bool>("Saturday")
                        .HasColumnType("boolean")
                        .HasColumnName("Sat");

                    b.Property<bool>("Sunday")
                        .HasColumnType("boolean")
                        .HasColumnName("Sun");

                    b.Property<bool>("Thursday")
                        .HasColumnType("boolean")
                        .HasColumnName("Thu");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("boolean")
                        .HasColumnName("Tue");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.Property<DateOnly?>("ValidFrom")
                        .HasColumnType("date")
                        .HasColumnName("TDate");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("boolean")
                        .HasColumnName("Wed");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("WEEKEND_DETAIL");
                });

            modelBuilder.Entity("Hrms.Common.Models.WorkHour", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("WORK_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<short>("ETMVAL")
                        .HasColumnType("smallint")
                        .HasColumnName("ETMVAL");

                    b.Property<string>("EndTime")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("END_TIME");

                    b.Property<int?>("FlexiDuration")
                        .HasColumnType("integer")
                        .HasColumnName("FLEXI_DURATION");

                    b.Property<string>("HalfDayEndTime")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("HALF_DAY_END_TIME");

                    b.Property<string>("HalfDayStartTime")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("HALF_DAY_START_TIME");

                    b.Property<short>("InEndGrace")
                        .HasColumnType("smallint")
                        .HasColumnName("INENDGRACE");

                    b.Property<string>("InStart")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("IN_START");

                    b.Property<short>("InStartGrace")
                        .HasColumnType("smallint")
                        .HasColumnName("INSTARTGRACE");

                    b.Property<bool?>("IsEarlyGoingButNoOt")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_EARLY_GOING_BUT_NO_OT");

                    b.Property<bool>("IsFlexible")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_MIN_DURATION");

                    b.Property<bool>("IsNightShift")
                        .HasColumnType("boolean")
                        .HasColumnName("IS_NIGHTSHIFT");

                    b.Property<int?>("LateInGraceTime")
                        .HasColumnType("integer")
                        .HasColumnName("LATE_IN_GRACE_TIME");

                    b.Property<byte>("LockIn")
                        .HasColumnType("smallint")
                        .HasColumnName("LOCKIN");

                    b.Property<string>("LockInTime")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LOCKINTIME");

                    b.Property<byte>("LockLunch")
                        .HasColumnType("smallint")
                        .HasColumnName("LOCKLT");

                    b.Property<string>("LockLunchTime")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LOCKLTTIME");

                    b.Property<byte>("LockOut")
                        .HasColumnType("smallint")
                        .HasColumnName("LOCKOUT");

                    b.Property<string>("LockOutTime")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("LOCKOUTTIME");

                    b.Property<short?>("LunchTime")
                        .HasColumnType("smallint")
                        .HasColumnName("LUNCHTIME");

                    b.Property<int?>("MinDutyTime")
                        .HasColumnType("integer")
                        .HasColumnName("MIN_DUTY_TIME");

                    b.Property<int?>("MinHalfDayTime")
                        .HasColumnType("integer")
                        .HasColumnName("MIN_HALF_DAY_TIME");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("NightEndTime")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NIGHT_END_TIME");

                    b.Property<string>("NightStartTime")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NIGHT_START_TIME");

                    b.Property<short>("OutEndGrace")
                        .HasColumnType("smallint")
                        .HasColumnName("OUTENDGRACE");

                    b.Property<string>("OutStart")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("OUT_START");

                    b.Property<short>("OutStartGrace")
                        .HasColumnType("smallint")
                        .HasColumnName("OUTSTARTGRACE");

                    b.Property<short>("STMVAL")
                        .HasColumnType("smallint")
                        .HasColumnName("STMVAL");

                    b.Property<string>("StartTime")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("START_TIME");

                    b.Property<short?>("TiffinTime")
                        .HasColumnType("smallint")
                        .HasColumnName("TIFFINTIME");

                    b.Property<string>("TotalHour")
                        .IsRequired()
                        .HasColumnType("varchar(6)")
                        .HasColumnName("WORK_HOUR");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("T_Date");

                    b.Property<string>("TransactionUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TUser");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UPDATED_AT");

                    b.Property<decimal>("WorkDayCount")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("WORK_DAYCOUNT");

                    b.Property<byte>("WorkType")
                        .HasColumnType("smallint")
                        .HasColumnName("WORK_TYPE");

                    b.HasKey("Id");

                    b.ToTable("WORK_HOUR");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Hrms.Common.Models.Asset", b =>
                {
                    b.HasOne("Hrms.Common.Models.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.Attendance", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "EmpDetail")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.Regularisation", "Regularisation")
                        .WithMany()
                        .HasForeignKey("RegularisationId");

                    b.HasOne("Hrms.Common.Models.WorkHour", "WorkHour")
                        .WithMany()
                        .HasForeignKey("WorkHourId");

                    b.Navigation("EmpDetail");

                    b.Navigation("Regularisation");

                    b.Navigation("WorkHour");
                });

            modelBuilder.Entity("Hrms.Common.Models.AttendanceLogNoDirection", b =>
                {
                    b.HasOne("Hrms.Common.Models.DeviceSetting", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Hrms.Common.Models.Branch", b =>
                {
                    b.HasOne("Hrms.Common.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Hrms.Common.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("City");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Hrms.Common.Models.City", b =>
                {
                    b.HasOne("Hrms.Common.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("Hrms.Common.Models.DefaultWorkHour", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("Hrms.Common.Models.WorkHour", "WorkHour")
                        .WithMany()
                        .HasForeignKey("WorkHourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");

                    b.Navigation("WorkHour");
                });

            modelBuilder.Entity("Hrms.Common.Models.Department", b =>
                {
                    b.HasOne("Hrms.Common.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Hrms.Common.Models.Designation", b =>
                {
                    b.HasOne("Hrms.Common.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Hrms.Common.Models.DeviceLog", b =>
                {
                    b.HasOne("Hrms.Common.Models.DeviceSetting", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Hrms.Common.Models.Document", b =>
                {
                    b.HasOne("Hrms.Common.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hrms.Common.Models.EarnedLeave", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.Leave", "Leave")
                        .WithMany()
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("Hrms.Common.Models.Education", b =>
                {
                    b.HasOne("Hrms.Common.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Hrms.Common.Models.EducationLevel", "EducationLevel")
                        .WithMany()
                        .HasForeignKey("EducationLevelId");

                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("EducationLevel");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpCalendar", b =>
                {
                    b.HasOne("Hrms.Common.Models.Calendar", "Calendar")
                        .WithMany()
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendar");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpDetail", b =>
                {
                    b.HasOne("Hrms.Common.Models.Country", "BirthCountry")
                        .WithMany()
                        .HasForeignKey("BirthCountryId");

                    b.HasOne("Hrms.Common.Models.State", "BirthState")
                        .WithMany()
                        .HasForeignKey("BirthStateId");

                    b.HasOne("Hrms.Common.Models.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.Navigation("BirthCountry");

                    b.Navigation("BirthState");

                    b.Navigation("Religion");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpDeviceCode", b =>
                {
                    b.HasOne("Hrms.Common.Models.DeviceSetting", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpDocument", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpLeave", b =>
                {
                    b.HasOne("Hrms.Common.Models.Leave", "Leave")
                        .WithMany()
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmploymentHistory", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.EmpTransaction", b =>
                {
                    b.HasOne("Hrms.Common.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Hrms.Common.Models.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Hrms.Common.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Hrms.Common.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId");

                    b.HasOne("Hrms.Common.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Hrms.Common.Models.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId");

                    b.HasOne("Hrms.Common.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("Hrms.Common.Models.EmpDetail", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Hrms.Common.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("Hrms.Common.Models.EmpDetail", "HodEmp")
                        .WithMany()
                        .HasForeignKey("HodEmpId");

                    b.HasOne("Hrms.Common.Models.Mode", "Mode")
                        .WithMany()
                        .HasForeignKey("ModeId");

                    b.HasOne("Hrms.Common.Models.Bank", "PFBank")
                        .WithMany()
                        .HasForeignKey("PFBankId");

                    b.HasOne("Hrms.Common.Models.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("Hrms.Common.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("Hrms.Common.Models.EmpDetail", "RmEmp")
                        .WithMany()
                        .HasForeignKey("RmEmpId");

                    b.HasOne("Hrms.Common.Models.Bank", "SalaryBank")
                        .WithMany()
                        .HasForeignKey("SalaryBankId");

                    b.HasOne("Hrms.Common.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Hrms.Common.Models.Department", "SubDepartment")
                        .WithMany()
                        .HasForeignKey("SubDepartmentId");

                    b.HasOne("Hrms.Common.Models.UniformType", "UniformType")
                        .WithMany()
                        .HasForeignKey("UniformTypeId");

                    b.Navigation("Branch");

                    b.Navigation("BusinessUnit");

                    b.Navigation("Company");

                    b.Navigation("CostCenter");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Division");

                    b.Navigation("Employee");

                    b.Navigation("Grade");

                    b.Navigation("HodEmp");

                    b.Navigation("Mode");

                    b.Navigation("PFBank");

                    b.Navigation("Plant");

                    b.Navigation("Region");

                    b.Navigation("RmEmp");

                    b.Navigation("SalaryBank");

                    b.Navigation("Status");

                    b.Navigation("SubDepartment");

                    b.Navigation("UniformType");
                });

            modelBuilder.Entity("Hrms.Common.Models.Family", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.ForcedAttendance", b =>
                {
                    b.HasOne("Hrms.Common.Models.Regularisation", "Regularisation")
                        .WithMany()
                        .HasForeignKey("RegularisationId");

                    b.Navigation("Regularisation");
                });

            modelBuilder.Entity("Hrms.Common.Models.Grade", b =>
                {
                    b.HasOne("Hrms.Common.Models.GradeType", "GradeType")
                        .WithMany()
                        .HasForeignKey("GType");

                    b.Navigation("GradeType");
                });

            modelBuilder.Entity("Hrms.Common.Models.Hobby", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.Holiday", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.HolidayCalendar", b =>
                {
                    b.HasOne("Hrms.Common.Models.Calendar", "Calendar")
                        .WithMany()
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.Holiday", "Holiday")
                        .WithMany()
                        .HasForeignKey("HolidayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendar");

                    b.Navigation("Holiday");
                });

            modelBuilder.Entity("Hrms.Common.Models.ImportAttendanceLog", b =>
                {
                    b.HasOne("Hrms.Common.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hrms.Common.Models.LanguageKnown", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveApplicationHistory", b =>
                {
                    b.HasOne("Hrms.Common.Models.User", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("Hrms.Common.Models.User", "DisapprovedBy")
                        .WithMany()
                        .HasForeignKey("DisapprovedById");

                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.Leave", "Leave")
                        .WithMany()
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.LeaveYear", "LeaveYear")
                        .WithMany()
                        .HasForeignKey("LeaveYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("DisapprovedBy");

                    b.Navigation("Emp");

                    b.Navigation("Leave");

                    b.Navigation("LeaveYear");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveLedger", b =>
                {
                    b.HasOne("Hrms.Common.Models.Leave", "Leave")
                        .WithMany()
                        .HasForeignKey("LeaveId");

                    b.HasOne("Hrms.Common.Models.LeaveYear", "LeaveYear")
                        .WithMany()
                        .HasForeignKey("LeaveYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leave");

                    b.Navigation("LeaveYear");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveLedgerTemp", b =>
                {
                    b.HasOne("Hrms.Common.Models.Leave", "Leave")
                        .WithMany()
                        .HasForeignKey("LeaveId");

                    b.HasOne("Hrms.Common.Models.LeaveYear", "LeaveYear")
                        .WithMany()
                        .HasForeignKey("LeaveYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leave");

                    b.Navigation("LeaveYear");
                });

            modelBuilder.Entity("Hrms.Common.Models.LeaveYearMonths", b =>
                {
                    b.HasOne("Hrms.Common.Models.LeaveYear", "LeaveYear")
                        .WithMany()
                        .HasForeignKey("LeaveYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaveYear");
                });

            modelBuilder.Entity("Hrms.Common.Models.PdfServiceDocument", b =>
                {
                    b.HasOne("Hrms.Common.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hrms.Common.Models.Regularisation", b =>
                {
                    b.HasOne("Hrms.Common.Models.User", "ApprovedByUser")
                        .WithMany()
                        .HasForeignKey("ApprovedByUserId");

                    b.HasOne("Hrms.Common.Models.User", "DisapprovedByUser")
                        .WithMany()
                        .HasForeignKey("DisapprovedByUserId");

                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.GatePassType", "GatePassType")
                        .WithMany()
                        .HasForeignKey("GatePassTypeId");

                    b.Navigation("ApprovedByUser");

                    b.Navigation("DisapprovedByUser");

                    b.Navigation("Emp");

                    b.Navigation("GatePassType");
                });

            modelBuilder.Entity("Hrms.Common.Models.Roster", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.WorkHour", "WorkHour")
                        .WithMany()
                        .HasForeignKey("WorkHourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emp");

                    b.Navigation("User");

                    b.Navigation("WorkHour");
                });

            modelBuilder.Entity("Hrms.Common.Models.SalaryHead", b =>
                {
                    b.HasOne("Hrms.Common.Models.SalaryHeadCategory", "ShCategory")
                        .WithMany()
                        .HasForeignKey("ShCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShCategory");
                });

            modelBuilder.Entity("Hrms.Common.Models.Setting", b =>
                {
                    b.HasOne("Hrms.Common.Models.LeaveYear", "LeaveYear")
                        .WithMany()
                        .HasForeignKey("LeaveYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaveYear");
                });

            modelBuilder.Entity("Hrms.Common.Models.User", b =>
                {
                    b.HasOne("Hrms.Common.Models.EmpDetail", "Emp")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("Emp");
                });

            modelBuilder.Entity("Hrms.Common.Models.UserRole", b =>
                {
                    b.HasOne("Hrms.Common.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hrms.Common.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hrms.Common.Models.WeekendDetail", b =>
                {
                    b.HasOne("Hrms.Common.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Hrms.Common.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Hrms.Common.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Hrms.Common.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Hrms.Common.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hrms.Common.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Hrms.Common.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
